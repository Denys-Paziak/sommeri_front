@property --angle {
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: false;
}

@property --line-width {
    syntax: "<percentage>";
    initial-value: 100%;
    inherits: false;
}


@property --border-gradient-angle {
    syntax: "<angle>";
    inherits: true;
    initial-value: 0turn
}

@property --outer-radius {
    syntax: '<length>';
    inherits: false;
    initial-value: 0.5rem;
}

@property --border-size {
    syntax: '<length>';
    inherits: false;
    initial-value: 1px;
}

@property --inner-radius {
    syntax: '<length>';
    inherits: false;
    initial-value: calc(var(--outer-radius) - var(--border-size));
}

.anim_border {
    position: relative;
    padding: 1px;
}

.anim_border:after {
    --angle: 0deg;
    --line-width: 100%;
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    top: 50%;
    left: 50%;
    background: conic-gradient(from var(--angle), transparent var(--line-width), var(--primary));
    translate: -50% -50%;
    z-index: 0;
    border-radius: 10px;
    transition: 0.6s;
}

.anim_border:after {
    background-image: conic-gradient(from var(--border-gradient-angle) at -10% 100%, transparent, transparent 20%, var(--primary));
}

.anim_border:hover:after {
    animation: borderSpin 1.5s cubic-bezier(.52, .2, .43, 1) forwards;
}

@keyframes borderSpin {
    0% {
        --border-gradient-angle: 0turn;
    }

    100% {
        --border-gradient-angle: 1turn;
    }
}

.content {
    position: relative;
    height: 100%;
    border-radius: 10px;
    background: var(--black);
    z-index: 2;
}